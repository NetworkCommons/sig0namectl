#!/bin/bash
#
# Sends DNS-SD updates for domain browsing setup
#------------------------------------------------------------------------------


# load helpful functions
for i in functions/*.sh
do
        . ${i}
        [[ -n ${DEBUG_SOURCED} ]] && echo "Sourced ${PWD}/$i ..."
done

set_vars

#------------------------------------------------------------------------------
# test

NEW_SUBZONE=${NEW_SUBZONE:-""}

# select zone or subdomain within zone
if [[ -n ${NEW_SUBZONE} ]]; then
        DNSSD_DOMAIN="${NEW_SUBZONE}.${ZONE}"
else
	DNSSD_DOMAIN="${ZONE}"
fi

NSUPDATE_AUTH_SIG0_KEY_FQDN=${NSUPDATE_AUTH_SIG0_KEY_FQDN:-${DNSSD_DOMAIN}}

# define default update add
NSUPDATE_ACTION=${NSUPDATE_ACTION:-"add"}
NSUPDATE_TTL="600"

for word in lb b db r dr
do

	case ${NSUPDATE_ACTION} in
		add)
			NSUPDATE_PRECONDITION_SET="nxrrset"
			NSUPDATE_PRECONDITION="prereq ${NSUPDATE_PRECONDITION_SET} ${word}._dns-sd._udp.${DNSSD_DOMAIN}. IN PTR"
			NSUPDATE_ITEM_RR="update ${NSUPDATE_ACTION} ${word}._dns-sd._udp.${DNSSD_DOMAIN} ${NSUPDATE_TTL} PTR ${DNSSD_DOMAIN}."
			send_nsupdate "${ZONE}" "$(echo ${NSUPDATE_PRECONDITION};echo ${NSUPDATE_ITEM_RR})" "${NSUPDATE_AUTH_SIG0_KEY_FQDN}"
			;;
		delete)
			NSUPDATE_PRECONDITION_SET="yxrrset"
			NSUPDATE_PRECONDITION="prereq ${NSUPDATE_PRECONDITION_SET} ${word}._dns-sd._udp.${DNSSD_DOMAIN}. IN PTR"
			NSUPDATE_ITEM_RR="update ${NSUPDATE_ACTION} ${word}._dns-sd._udp.${DNSSD_DOMAIN} ${NSUPDATE_TTL} PTR ${DNSSD_DOMAIN}."
			send_nsupdate "${ZONE}" "$(echo ${NSUPDATE_PRECONDITION};echo ${NSUPDATE_ITEM_RR})" "${NSUPDATE_AUTH_SIG0_KEY_FQDN}"
			;;
		*)
			# NSUPDATE_ACTION should default to "add" - should never get here
			echo "Error: NSUPDATE_ACTION is set to '${NSUPDATE_ACTION}', but must be set to 'add' or 'delete'."
			exit 1
			;;
	esac
	DIG_QUERY_PARAM="@${ZONE_SOA_MASTER} +short"
	[[ -n ${DEBUG} ]] && echo "dig @${ZONE_SOA_MASTER} PTR ${word}._dns-sd._udp.${DNSSD_DOMAIN}. '$( dig ${DIG_QUERY_PARAM} PTR ${word}._dns-sd._udp.${DNSSD_DOMAIN}. )'"
done
